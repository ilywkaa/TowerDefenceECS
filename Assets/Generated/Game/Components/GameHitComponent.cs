//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TowerDefence.HitComponent hit { get { return (TowerDefence.HitComponent)GetComponent(GameComponentsLookup.Hit); } }
    public bool hasHit { get { return HasComponent(GameComponentsLookup.Hit); } }

    public void AddHit(int newValue) {
        var index = GameComponentsLookup.Hit;
        var component = (TowerDefence.HitComponent)CreateComponent(index, typeof(TowerDefence.HitComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHit(int newValue) {
        var index = GameComponentsLookup.Hit;
        var component = (TowerDefence.HitComponent)CreateComponent(index, typeof(TowerDefence.HitComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHit() {
        RemoveComponent(GameComponentsLookup.Hit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHit;

    public static Entitas.IMatcher<GameEntity> Hit {
        get {
            if (_matcherHit == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Hit);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHit = matcher;
            }

            return _matcherHit;
        }
    }
}
